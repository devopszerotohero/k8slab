- hosts: "k8snodes" #name into inventory file.
  vars:
    domain: local
  tasks:
# TEST CONNECTION
    - name: connection test
      debug:
        msg: System {{ inventory_hostname }} has IP {{ansible_default_ipv4.address|default(ansible_all_ipv4_addresses[0])}}
# INSTALL BASE SOFTWARE
    - name: install base software
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - tree
          - telnet
          - vim
          - bash-completion
        state: present
      become: yes

    - name: Add repository Docker gpg key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
      become: yes

    - apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
        state: present
      become: yes

    - name: Update repositories cache and install "docker" package
      apt:
        name: docker-ce
        update_cache: yes
      become: yes

    - name: Install docker
      apt:
        name: docker-ce
        state: present
      become: yes

    - name: start & enable docker service
      service:
        name: docker
        state: started
        enabled: yes
      become: yes

# INSTALL COMMON KUBERNETES

    - name: check if kubernetes is installed
      stat:
        path: /etc/kubernetes/admin.conf
      register: admin_conf

    - name: Add repository google gpg key
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present
      become: yes
      when:
        - not admin_conf.stat.exists


    - name: Check if kubernetes repository exist
      uri:
        url: https://packages.cloud.google.com/apt/dists/kubernetes-{{ ansible_distribution_release }}
      register: aptk8srepos
      ignore_errors: yes


    - apt_repository:
        repo: deb [arch=amd64] http://apt.kubernetes.io/ kubernetes-{{ ansible_distribution_release }} main
        state: present
      become: yes
      when:
        - aptk8srepos.status == 200
        - not admin_conf.stat.exists


    - apt_repository:
        repo: deb [arch=amd64] http://apt.kubernetes.io/ kubernetes-xenial main
        state: present
      become: yes
      when:
        - aptk8srepos.status == 404
        - not admin_conf.stat.exists
## install kubernetes packages
    - name: install k8s
      apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
          - kubernetes-cni
        state: present
      become: yes
      when:
        - not admin_conf.stat.exists
## config system
    - sysctl:
        name: net.bridge.bridge-nf-call-iptables
        value: '1'
        state: present
      become: yes

    - name: Iptables enable forward
      iptables:
        chain: FORWARD
        jump: ACCEPT
      become: yes

    - sysctl:
        name: net.ipv4.conf.all.forwarding
        value: '1'
        state: present
      become: yes

    - name: Disable SWAP since kubernetes can't work with swap enabled (1/2)
      shell: |
        swapoff -a
      become: yes

    - name: Disable SWAP in fstab since kubernetes can't work with swap enabled (2/2)
      replace:
        path: /etc/fstab
        regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
        replace: '# \1'
      become: yes

## assign name to hosts for diferenciate.

    - name: change hostname 1/2
      shell: "echo '{{ansible_default_ipv4.address|default(ansible_all_ipv4_addresses[0])}}' |  sed 's/[.]/-/g'"
      register: ipdns
      become: yes

    - name: change hostname 2/2
      hostname:
        name: "ip-{{ ipdns.stdout }}.{{ domain }}"
      become: yes

    - debug:
        var: ipdns